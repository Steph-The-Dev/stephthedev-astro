---
// MobileNav.astro
interface NavItem {
  name: string;
  url: string;
  isShown: boolean;
}

interface Props {
  items: NavItem[];
}

const { items } = Astro.props;
---

    <label class="hamburger-menu">
      <input type="checkbox" />
    </label>
    <aside class="sidebar">
      <nav>
        <ul class="menu-items">
          {items.map((item) => (
            item.isShown && (
              <li>
              <a href={item.url}>{item.name}</a>
            </li>
            )
          ))}
        </ul>
      </nav>
    </aside>

<style>


:root {
  --bar-width: 30px;
  --bar-height: 4px;
  --hamburger-gap: 4px;
  --foreground: #333;
  --background: white;
  --hamburger-margin: 2rem;
  --animation-timing: 200ms ease-in-out;
  --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}


.hamburger-menu {
  --x-width: calc(var(--hamburger-height) * 1.41421356237);

  display: flex;
  flex-direction: column;
  gap: var(--hamburger-gap);
  width: max-content;
  position: relative;
  /* top: var(--hamburger-margin); */
  /* right: calc(var(--hamburger-margin)); */
  z-index: 1000;
  cursor: pointer;
}

.hamburger-menu:has(input:checked) {
  --foreground: white;
  --background: #333;
}

.hamburger-menu:has(input:focus-visible)::before,
.hamburger-menu:has(input:focus-visible)::after,
.hamburger-menu input:focus-visible {
  border: 1px solid var(--background);
  box-shadow: 0 0 0 1px var(--foreground);
}

.hamburger-menu::before,
.hamburger-menu::after,
.hamburger-menu input {
  content: "";
  width: var(--bar-width);
  height: var(--bar-height);
  background-color: var(--foreground);
  border-radius: 9999px;
  transform-origin: left center;
  transition: opacity var(--animation-timing), width var(--animation-timing),
    rotate var(--animation-timing), translate var(--animation-timing),
    background-color var(--animation-timing), opacity var(--animation-timing);
}

.hamburger-menu input {
  appearance: none;
  padding: 0;
  margin: 0;
  outline: none;
  pointer-events: none;
}

.hamburger-menu:has(input:checked)::before {
  rotate: 45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / -2);
}

.hamburger-menu:has(input:checked)::after {
  rotate: -45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / 2);
}

.hamburger-menu input:checked {
  opacity: 0;
  width: 0;
}

.sidebar {
  transition: translate var(--animation-timing);
  translate: 100%;
  padding: 0.5rem 2rem;
  padding-top: calc(var(--hamburger-height) + var(--hamburger-margin) + 1rem);
  padding-bottom: 2rem;
  background-color: var(--foreground);
  color: var(--background);
  width: 15rem;
  height: min-content;
  position: absolute;
  top: 0;
  right: -15rem;
  display: none;
  font-size: var(--fs-500);
  border-end-start-radius: 20px;
}

.hamburger-menu:has(input:checked) + .sidebar {
  translate: -100%;
  display: block;
  z-index: 999;
}

a:hover {
  font-style: italic;
  font-weight: bold;
}

@media screen and (width > 800px) {
  .hamburger-menu, .sidebar {
    display: none;
  }
}
</style>
  
<script>

</script>