---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogList from "../blog/BlogList.astro";

export interface Props {
	count?: number;
}

const { count } = Astro.props;

// const posts = await getCollection("blog").then((collection: any[]) => {
// 	return collection
//     .sort((a, b) => {
//       const dateA = new Date(a.data.pubDate).getTime();
//       const dateB = new Date(b.data.pubDate).getTime();
//       return dateA - dateB;
//     })
// 		.slice(0, count ?? 3)
// })
const posts: CollectionEntry<"blog">[] = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
).slice(0, count ?? 3)
---

<section class="wrapper blog">
    <h1 class="header">blog</h1>
    <!-- <h2>most recent entries</h2> -->
    {posts.length === 0 &&     
        <p class="header">blog</p>
        <p class="paragraph">coming soon...</p>}

    <BlogList posts={posts}/>
</section>